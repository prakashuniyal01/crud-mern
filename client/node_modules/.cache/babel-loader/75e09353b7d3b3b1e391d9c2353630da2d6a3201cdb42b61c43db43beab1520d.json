{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/mern-projects/crud/crudoperations/src/Components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Table, Thead, Tbody, Tr, Td, Th, TableContainer, Flex, Spinner, Heading } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport AddUser from \"./AddUser\";\nimport DeleteUser from \"./DeleteUser\";\nimport EditUpdateUser from \"./EditUpdateUser\";\nimport Pagination from \"./Common/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [employeeData, setEmployeeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setcurrentPage] = useState(1);\n  const postPerPage = 5;\n\n  //get users Data\n  const getUsersData = () => {\n    axios.get(\"http://localhost:5000/users\").then(res => {\n      setEmployeeData(res.data.data);\n      setLoading(false);\n    }).catch(error => console.error(error));\n  };\n  useEffect(() => {\n    getUsersData();\n  }, []);\n\n  // / Get current posts\n  const indexOfLastPost = currentPage * postPerPage;\n  const indexOfFirstPost = indexOfLastPost - postPerPage;\n  const currentPosts = employeeData.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Change page\n  const paginate = pageNumber => setcurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      thickness: \"4px\",\n      speed: \"0.8s\",\n      emptyColor: \"grey\",\n      color: \"blue\",\n      size: \"lg\",\n      mt: \"20\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : employeeData.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        mb: 5,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          variant: \"striped\",\n          children: [/*#__PURE__*/_jsxDEV(Thead, {\n            children: /*#__PURE__*/_jsxDEV(Tr, {\n              children: [/*#__PURE__*/_jsxDEV(Th, {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Designation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n            children: currentPosts.map(ele => /*#__PURE__*/_jsxDEV(Tr, {\n              children: [/*#__PURE__*/_jsxDEV(Td, {\n                children: ele._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: ele.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: ele.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: ele.designation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: /*#__PURE__*/_jsxDEV(Flex, {\n                  gap: \"2\",\n                  children: [/*#__PURE__*/_jsxDEV(DeleteUser, {\n                    userId: ele._id,\n                    getUsersData: getUsersData\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(EditUpdateUser, {\n                    userData: ele,\n                    getUsersData: getUsersData\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this)]\n            }, ele._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), employeeData.length > 5 && /*#__PURE__*/_jsxDEV(Pagination, {\n        currentPage: currentPage,\n        postPerPage: postPerPage,\n        totalPosts: employeeData.length,\n        paginate: paginate,\n        setcurrentPage: setcurrentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h3\",\n      size: \"lg\",\n      my: \"10\",\n      children: \"No users found!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddUser, {\n      getUsersData: getUsersData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"hiAgIrIWy6zKNBOC4lP4GPx4iMk=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Table","Thead","Tbody","Tr","Td","Th","TableContainer","Flex","Spinner","Heading","axios","AddUser","DeleteUser","EditUpdateUser","Pagination","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","employeeData","setEmployeeData","loading","setLoading","currentPage","setcurrentPage","postPerPage","getUsersData","get","then","res","data","catch","error","console","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","children","thickness","speed","emptyColor","color","size","mt","fileName","_jsxFileName","lineNumber","columnNumber","length","mb","variant","map","ele","_id","name","email","designation","gap","userId","userData","totalPosts","as","my","_c","$RefreshReg$"],"sources":["/home/ubuntu/Desktop/mern-projects/crud/crudoperations/src/Components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Td,\n  Th,\n  TableContainer,\n  Flex,\n  Spinner,\n  Heading,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport AddUser from \"./AddUser\";\nimport DeleteUser from \"./DeleteUser\";\nimport EditUpdateUser from \"./EditUpdateUser\";\nimport Pagination from \"./Common/Pagination\";\n\nconst Dashboard = () => {\n  const [employeeData, setEmployeeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setcurrentPage] = useState(1);\n  const postPerPage = 5;\n\n  //get users Data\n  const getUsersData = () => {\n    axios\n      .get(\"http://localhost:5000/users\")\n      .then((res) => {\n        setEmployeeData(res.data.data);\n        setLoading(false);\n      })\n      .catch((error) => console.error(error));\n  };\n\n  useEffect(() => {\n    getUsersData();\n  }, []);\n\n  // / Get current posts\n  const indexOfLastPost = currentPage * postPerPage;\n  const indexOfFirstPost = indexOfLastPost - postPerPage;\n  const currentPosts = employeeData.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Change page\n  const paginate = (pageNumber) => setcurrentPage(pageNumber);\n  return (\n    <div>\n      {loading ? (\n        <Spinner\n          thickness=\"4px\"\n          speed=\"0.8s\"\n          emptyColor=\"grey\"\n          color=\"blue\"\n          size=\"lg\"\n          mt=\"20\"\n        />\n      ) : employeeData.length > 0 ? (\n        <>\n          <TableContainer mb={5}>\n            <Table variant=\"striped\">\n              <Thead>\n                <Tr>\n                  <Th>ID</Th>\n                  <Th>Name</Th>\n                  <Th>Email</Th>\n                  <Th>Designation</Th>\n                  <Th>Action</Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n                {currentPosts.map((ele) => (\n                  <Tr key={ele._id}>\n                    <Td>{ele._id}</Td>\n                    <Td>{ele.name}</Td>\n                    <Td>{ele.email}</Td>\n                    <Td>{ele.designation}</Td>\n                    <Td>\n                      <Flex gap=\"2\">\n                        <DeleteUser\n                          userId={ele._id}\n                          getUsersData={getUsersData}\n                        />\n                        <EditUpdateUser\n                          userData={ele}\n                          getUsersData={getUsersData}\n                        />\n                      </Flex>\n                    </Td>\n                  </Tr>\n                ))}\n              </Tbody>\n            </Table>\n          </TableContainer>\n          {employeeData.length > 5 && (\n            <Pagination\n              currentPage={currentPage}\n              postPerPage={postPerPage}\n              totalPosts={employeeData.length}\n              paginate={paginate}\n              setcurrentPage={setcurrentPage}\n            />\n          )}\n        </>\n      ) : (\n        <Heading as=\"h3\" size=\"lg\" my=\"10\">\n          No users found!!\n        </Heading>\n      )}\n      <AddUser getUsersData={getUsersData} />\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,KAAK,EACLC,KAAK,EACLC,KAAK,EACLC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,cAAc,EACdC,IAAI,EACJC,OAAO,EACPC,OAAO,QACF,kBAAkB;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,UAAU,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC0B,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM4B,WAAW,GAAG,CAAC;;EAErB;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBlB,KAAK,CACFmB,GAAG,CAAC,6BAA6B,CAAC,CAClCC,IAAI,CAAEC,GAAG,IAAK;MACbT,eAAe,CAACS,GAAG,CAACC,IAAI,CAACA,IAAI,CAAC;MAC9BR,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDS,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C,CAAC;EAEDpC,SAAS,CAAC,MAAM;IACd8B,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,eAAe,GAAGX,WAAW,GAAGE,WAAW;EACjD,MAAMU,gBAAgB,GAAGD,eAAe,GAAGT,WAAW;EACtD,MAAMW,YAAY,GAAGjB,YAAY,CAACkB,KAAK,CAACF,gBAAgB,EAAED,eAAe,CAAC;;EAE1E;EACA,MAAMI,QAAQ,GAAIC,UAAU,IAAKf,cAAc,CAACe,UAAU,CAAC;EAC3D,oBACEzB,OAAA;IAAA0B,QAAA,GACGnB,OAAO,gBACNP,OAAA,CAACR,OAAO;MACNmC,SAAS,EAAC,KAAK;MACfC,KAAK,EAAC,MAAM;MACZC,UAAU,EAAC,MAAM;MACjBC,KAAK,EAAC,MAAM;MACZC,IAAI,EAAC,IAAI;MACTC,EAAE,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,GACA/B,YAAY,CAACgC,MAAM,GAAG,CAAC,gBACzBrC,OAAA,CAAAE,SAAA;MAAAwB,QAAA,gBACE1B,OAAA,CAACV,cAAc;QAACgD,EAAE,EAAE,CAAE;QAAAZ,QAAA,eACpB1B,OAAA,CAAChB,KAAK;UAACuD,OAAO,EAAC,SAAS;UAAAb,QAAA,gBACtB1B,OAAA,CAACf,KAAK;YAAAyC,QAAA,eACJ1B,OAAA,CAACb,EAAE;cAAAuC,QAAA,gBACD1B,OAAA,CAACX,EAAE;gBAAAqC,QAAA,EAAC;cAAE;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACXpC,OAAA,CAACX,EAAE;gBAAAqC,QAAA,EAAC;cAAI;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACbpC,OAAA,CAACX,EAAE;gBAAAqC,QAAA,EAAC;cAAK;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACdpC,OAAA,CAACX,EAAE;gBAAAqC,QAAA,EAAC;cAAW;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpBpC,OAAA,CAACX,EAAE;gBAAAqC,QAAA,EAAC;cAAM;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACb;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRpC,OAAA,CAACd,KAAK;YAAAwC,QAAA,EACHJ,YAAY,CAACkB,GAAG,CAAEC,GAAG,iBACpBzC,OAAA,CAACb,EAAE;cAAAuC,QAAA,gBACD1B,OAAA,CAACZ,EAAE;gBAAAsC,QAAA,EAAEe,GAAG,CAACC;cAAG;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAClBpC,OAAA,CAACZ,EAAE;gBAAAsC,QAAA,EAAEe,GAAG,CAACE;cAAI;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACnBpC,OAAA,CAACZ,EAAE;gBAAAsC,QAAA,EAAEe,GAAG,CAACG;cAAK;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACpBpC,OAAA,CAACZ,EAAE;gBAAAsC,QAAA,EAAEe,GAAG,CAACI;cAAW;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC1BpC,OAAA,CAACZ,EAAE;gBAAAsC,QAAA,eACD1B,OAAA,CAACT,IAAI;kBAACuD,GAAG,EAAC,GAAG;kBAAApB,QAAA,gBACX1B,OAAA,CAACJ,UAAU;oBACTmD,MAAM,EAAEN,GAAG,CAACC,GAAI;oBAChB9B,YAAY,EAAEA;kBAAa;oBAAAqB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC5B,CAAC,eACFpC,OAAA,CAACH,cAAc;oBACbmD,QAAQ,EAAEP,GAAI;oBACd7B,YAAY,EAAEA;kBAAa;oBAAAqB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC5B,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA,GAhBEK,GAAG,CAACC,GAAG;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAiBZ,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC,EAChB/B,YAAY,CAACgC,MAAM,GAAG,CAAC,iBACtBrC,OAAA,CAACF,UAAU;QACTW,WAAW,EAAEA,WAAY;QACzBE,WAAW,EAAEA,WAAY;QACzBsC,UAAU,EAAE5C,YAAY,CAACgC,MAAO;QAChCb,QAAQ,EAAEA,QAAS;QACnBd,cAAc,EAAEA;MAAe;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CACF;IAAA,eACD,CAAC,gBAEHpC,OAAA,CAACP,OAAO;MAACyD,EAAE,EAAC,IAAI;MAACnB,IAAI,EAAC,IAAI;MAACoB,EAAE,EAAC,IAAI;MAAAzB,QAAA,EAAC;IAEnC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CACV,eACDpC,OAAA,CAACL,OAAO;MAACiB,YAAY,EAAEA;IAAa;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV,CAAC;AAAChC,EAAA,CA9FID,SAAS;AAAAiD,EAAA,GAATjD,SAAS;AAgGf,eAAeA,SAAS;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}